# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]
        #python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements/test.txt

      - name: Test
        run: |
          pytest -v --cov=src tests --cov-report=xml

      - name: Upload to Codecov
        if: github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          verbose: true

  pages-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install the dependencies
        run: |
          src/here_search/demo/scripts/lite-run.sh -n || true
          ls -la
          ls -la workspace
          mv workspace/public .
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

#  deploy:
#    needs: pages-build
#    if: github.ref == 'refs/heads/main'
#    permissions:
#      pages: write
#      id-token: write
#
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1
