# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      OS: ubuntu-latest
      PYTHON: '3.9'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Generate Report
      run: |
        pip install -e ".[lab]"
        pip install -r requirements/dev.txt
        coverage run --source src -m pytest
        coverage report -m
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[lab]"
        pip install -r requirements/dev.txt
        python -m pip install pytest
    - name: Test with pytest
      run: |
        pytest

  pages-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install the dependencies
        run: |
          mkdir dist
          pip install jupyterlab jupyterlab_widgets jupyterlab-filesystem-access jupyterlite ipywidgets==7.7.2 ipyleaflet==0.17.1 wheel
          pip -v wheel ".[lite]" --wheel-dir dist --no-deps --no-binary ":all:"
          cp src/here_search/demo/notebooks/*.ipynb dist/
      - name: Build the JupyterLite site
        run: |
          cp README.md content
          jupyter lite build --contents content --output-dir dist
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist
          
#  deploy:
#    needs: pages-build
#    if: github.ref == 'refs/heads/main'
#    permissions:
#      pages: write
#      id-token: write
#
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1
