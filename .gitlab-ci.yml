# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.

include:
  - project: olp/onesearch/infrastructure/gitlabci-utils
    file: variables_from_vault.yml
    ref: master

image:
  name: docker:latest
  #entrypoint: ['/bin/bash', '-c', 'useradd --create-home search && exec su search -c /bin/bash']

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:          # List of stages for jobs, and their order of execution
  - build
  - run

before_script:
  - apk add --update --no-cache sudo bash py-pip python3-dev libffi-dev openssl-dev gcc libc-dev make 
  - ln -sf python /usr/bin/python
  - pip3 install --no-cache --upgrade pip setuptools
  - python3 -V
  
build:
  stage: build  
  services:
    - docker:dind
  script:
    - PATH=/home/search:/home/search/.local/bin:$PATH
    - pip3 -v install jupyter-repo2docker
    - adduser -h /home search -S -D
    #- runuser -u search -- jupyter-repo2docker --no-run --image-name search-demo-repo2docker --user-name search .
    #- su -s /bin/bash search "/usr/bin/jupyter-repo2docker --no-run --image-name search-demo-repo2docker --user-name search ."
    - sudo -u search /usr/bin/jupyter-repo2docker --no-run --image-name search-demo-repo2docker --user-name search .
    - docker save search-demo-repo2docker:latest | gzip > search-demo-repo2docker.tgz
  artifacts:
    paths:
      - search-demo-repo2docker.tgz


#docker-build:
  # Use the official docker image.
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:
#    - echo "$CI_REGISTRY_USER" "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
#  script:
#    - docker build .
    #- docker push "$CI_REGISTRY_IMAGE"
  # Run this job in a branch where a Dockerfile exists
  #rules:
  #  exists:
  #    - Dockerfile
